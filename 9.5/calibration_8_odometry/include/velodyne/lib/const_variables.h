#ifndef CYBERTRON_ONBOARD_DRIVERS_VELODYNE_INCLUDE_VELODYNE_LIB_CONST_VARIABLES_H
#define CYBERTRON_ONBOARD_DRIVERS_VELODYNE_INCLUDE_VELODYNE_LIB_CONST_VARIABLES_H

#include <iostream>

namespace cybertron {
namespace drivers {
namespace velodyne {

/**
* @brief Order array for re-ordering point cloud.
* Refer to Velodyne official manual
*/
//beike
const double HANGLE_V6K_16[16] = {6.01, 3.377, 6.01, 3.377, 6.01, 3.377, 6.01, 3.377,
                                  6.01, 3.377, 6.01, 3.377, 6.01, 3.377, 6.01, 3.377};
const double VANGLE_V6K_16[16] = {-15.0, -13.0, -11.0, -9.0, -7.0, -5.0, -3.0, -1.0,
                                  1.0,  3.0,  5.0,  7.0,  9.0,  11.0,  13.0,  15.0 };


//col = velodyne::ORDER_16[i],target_index = j * width + i;origin_index = j * width + col;
const int ORDER_16[16] = {0, 2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 7, 9, 11, 13, 15};
//col = velodyne::ORDER_16[i],origin_index = j * width + i;target_index = j * width + col;
const int REORDER_16[16] = {0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15};

const int ORDER_32[32] = {0,  2,  4,  6,  8,  10, 12, 14, 16, 18, 20,
                          22, 24, 26, 28, 30, 1,  3,  5,  7,  9,  11,
                          13, 15, 17, 19, 21, 23, 25, 27, 29, 31};

const int ORDER_64[64] = {38, 39, 42, 43, 32, 33, 36, 37, 40, 41, 46, 47, 50,
                          51, 54, 55, 44, 45, 48, 49, 52, 53, 58, 59, 62, 63,
                          34, 35, 56, 57, 60, 61, 6,  7,  10, 11, 0,  1,  4,
                          5,  8,  9,  14, 15, 18, 19, 22, 23, 12, 13, 16, 17,
                          20, 21, 26, 27, 30, 31, 2,  3,  24, 25, 28, 29};

// micro second
const float INNER_TIME_64[12][32] = {
    {419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20, 413.48,
     412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38, 407.65, 406.92,
     406.20, 405.47, 404.74, 404.01, 403.28, 402.56, 401.83, 401.10, 400.37,
     399.64, 398.92, 398.19, 397.46, 396.73},
    {419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20, 413.48,
     412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38, 407.65, 406.92,
     406.20, 405.47, 404.74, 404.01, 403.28, 402.56, 401.83, 401.10, 400.37,
     399.64, 398.92, 398.19, 397.46, 396.73},
    {396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91, 390.18,
     389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08, 384.36, 383.63,
     382.90, 382.17, 381.44, 380.72, 379.99, 379.26, 378.53, 377.80, 377.08,
     376.35, 375.62, 374.89, 374.16, 373.44},
    {396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91, 390.18,
     389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08, 384.36, 383.63,
     382.90, 382.17, 381.44, 380.72, 379.99, 379.26, 378.53, 377.80, 377.08,
     376.35, 375.62, 374.89, 374.16, 373.44},
    {372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61, 366.88,
     366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79, 361.06, 360.33,
     359.60, 358.88, 358.15, 357.42, 356.69, 355.96, 355.24, 354.51, 353.78,
     353.05, 352.32, 351.60, 350.87, 350.14},
    {372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61, 366.88,
     366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79, 361.06, 360.33,
     359.60, 358.88, 358.15, 357.42, 356.69, 355.96, 355.24, 354.51, 353.78,
     353.05, 352.32, 351.60, 350.87, 350.14},
    {349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32, 343.59,
     342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49, 337.76, 337.04,
     336.31, 335.58, 334.85, 334.12, 333.40, 332.67, 331.94, 331.21, 330.48,
     329.76, 329.03, 328.30, 327.57, 326.84},
    {349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32, 343.59,
     342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49, 337.76, 337.04,
     336.31, 335.58, 334.85, 334.12, 333.40, 332.67, 331.94, 331.21, 330.48,
     329.76, 329.03, 328.30, 327.57, 326.84},
    {326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02, 320.29,
     319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20, 314.47, 313.74,
     313.01, 312.28, 311.56, 310.83, 310.10, 309.37, 308.64, 307.92, 307.19,
     306.46, 305.73, 305.00, 304.28, 303.55},
    {326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02, 320.29,
     319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20, 314.47, 313.74,
     313.01, 312.28, 311.56, 310.83, 310.10, 309.37, 308.64, 307.92, 307.19,
     306.46, 305.73, 305.00, 304.28, 303.55},
    {302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72, 297.00,
     296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90, 291.17, 290.44,
     289.72, 288.99, 288.26, 287.53, 286.80, 286.08, 285.35, 284.62, 283.89,
     283.16, 282.44, 281.71, 280.98, 280.25},
    {302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72, 297.00,
     296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90, 291.17, 290.44,
     289.72, 288.99, 288.26, 287.53, 286.80, 286.08, 285.35, 284.62, 283.89,
     283.16, 282.44, 281.71, 280.98, 280.25}};

const float INNER_TIME_64E_S3[12][32] = {
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9, 158.4, 157.1,
     155.9, 154.7, 151.2, 149.9, 148.7, 147.5, 144, 142.7, 141.5, 140.3, 136.8,
     135.5, 134.3, 133.1, 129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9,
     118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9, 158.4, 157.1,
     155.9, 154.7, 151.2, 149.9, 148.7, 147.5, 144, 142.7, 141.5, 140.3, 136.8,
     135.5, 134.3, 133.1, 129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9,
     118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9, 158.4, 157.1,
     155.9, 154.7, 151.2, 149.9, 148.7, 147.5, 144, 142.7, 141.5, 140.3, 136.8,
     135.5, 134.3, 133.1, 129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9,
     118.7},
    {172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9, 158.4, 157.1,
     155.9, 154.7, 151.2, 149.9, 148.7, 147.5, 144, 142.7, 141.5, 140.3, 136.8,
     135.5, 134.3, 133.1, 129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9,
     118.7},
    {115.2, 113.9, 112.7, 111.5, 108, 106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1, 93.6, 92.3, 91.1, 89.9, 86.4, 85.1, 83.9, 82.7, 79.2, 77.9, 76.7,
     75.5, 72, 70.7, 69.5, 68.3, 64.8, 63.5, 62.3, 61.1},
    {115.2, 113.9, 112.7, 111.5, 108, 106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1, 93.6, 92.3, 91.1, 89.9, 86.4, 85.1, 83.9, 82.7, 79.2, 77.9, 76.7,
     75.5, 72, 70.7, 69.5, 68.3, 64.8, 63.5, 62.3, 61.1},
    {115.2, 113.9, 112.7, 111.5, 108, 106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1, 93.6, 92.3, 91.1, 89.9, 86.4, 85.1, 83.9, 82.7, 79.2, 77.9, 76.7,
     75.5, 72, 70.7, 69.5, 68.3, 64.8, 63.5, 62.3, 61.1},
    {115.2, 113.9, 112.7, 111.5, 108, 106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
     97.1, 93.6, 92.3, 91.1, 89.9, 86.4, 85.1, 83.9, 82.7, 79.2, 77.9, 76.7,
     75.5, 72, 70.7, 69.5, 68.3, 64.8, 63.5, 62.3, 61.1},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7, 39.5, 36,
     34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3, 19.1, 17.9, 14.4,
     13.1, 11.9, 10.7, 7.2, 5.9, 4.7, 3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7, 39.5, 36,
     34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3, 19.1, 17.9, 14.4,
     13.1, 11.9, 10.7, 7.2, 5.9, 4.7, 3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7, 39.5, 36,
     34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3, 19.1, 17.9, 14.4,
     13.1, 11.9, 10.7, 7.2, 5.9, 4.7, 3.5},
    {57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7, 39.5, 36,
     34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3, 19.1, 17.9, 14.4,
     13.1, 11.9, 10.7, 7.2, 5.9, 4.7, 3.5}};

// micro second
const float INNER_TIME_32[12][32] = {
    {543, 541, 540, 539, 538, 537, 536, 535, 533, 532, 531, 530, 529, 528, 526,
     525, 524, 523, 522, 521, 520, 518, 517, 516, 515, 514, 513, 511, 510, 509,
     508, 507},
    {497, 495, 494, 493, 492, 491, 490, 488, 487, 486, 485, 484, 483, 482, 480,
     479, 478, 477, 476, 475, 473, 472, 471, 470, 469, 468, 467, 465, 464, 463,
     462, 461},
    {450, 449, 448, 447, 446, 445, 444, 442, 441, 440, 439, 438, 437, 435, 434,
     433, 432, 431, 430, 429, 427, 426, 425, 424, 423, 422, 420, 419, 418, 417,
     416, 415},
    {404, 403, 402, 401, 400, 399, 397, 396, 395, 394, 393, 392, 391, 389, 388,
     387, 386, 385, 384, 382, 381, 380, 379, 378, 377, 376, 374, 373, 372, 371,
     370, 369},
    {358, 357, 356, 355, 354, 353, 351, 350, 349, 348, 347, 346, 344, 343, 342,
     341, 340, 339, 338, 336, 335, 334, 333, 332, 331, 329, 328, 327, 326, 325,
     324, 323},
    {312, 311, 310, 309, 308, 306, 305, 304, 303, 302, 301, 300, 298, 297, 296,
     295, 294, 293, 291, 290, 289, 288, 287, 286, 285, 283, 282, 281, 280, 279,
     278, 276},
    {266, 265, 264, 263, 262, 260, 259, 258, 257, 256, 255, 253, 252, 251, 250,
     249, 248, 247, 245, 244, 243, 242, 241, 240, 238, 237, 236, 235, 234, 233,
     232, 230},
    {220, 219, 218, 217, 215, 214, 213, 212, 211, 210, 209, 207, 206, 205, 204,
     203, 202, 200, 199, 198, 197, 196, 195, 194, 192, 191, 190, 189, 188, 187,
     185, 184},
    {174, 173, 172, 170, 169, 168, 167, 166, 165, 164, 162, 161, 160, 159, 158,
     157, 156, 154, 153, 152, 151, 150, 149, 147, 146, 145, 144, 143, 142, 141,
     139, 138},
    {128, 127, 126, 124, 123, 122, 121, 120, 119, 118, 116, 115, 114, 113, 112,
     111, 109, 108, 107, 106, 105, 104, 103, 101, 100, 99, 98, 97, 96, 94, 93,
     92},
    {82, 81, 79, 78, 77, 76, 75, 74, 73, 71, 70, 69, 68, 67, 66, 65, 63, 62, 61,
     60, 59, 58, 56, 55, 54, 53, 52, 51, 50, 48, 47, 46},
    {36, 35, 33, 32, 31, 30, 29, 28, 26, 25, 24, 23, 22, 21, 20, 18, 17, 16, 15,
     14, 13, 12, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0}};
/*
const float INNER_TIME_16[12][32] = {
    {-0, -2.3, -4.61, -6.91, -9.22, -11.52, -13.82, -16.13, -18.43, -20.74,
     -23.04, -25.34, -27.65, -29.95, -32.26, -34.56, -55.3, -57.6, -59.9,
     -62.21, -64.51, -66.82, -69.12, -71.42, -73.73, -76.03, -78.34, -80.64,
     -82.94, -85.25, -87.55, -89.86},
    {-110.59, -112.9, -115.2, -117.5, -119.81, -122.11, -124.42, -126.72,
     -129.02, -131.33, -133.63, -135.94, -138.24, -140.54, -142.85, -145.15,
     -165.89, -168.19, -170.5, -172.8, -175.1, -177.41, -179.71, -182.02,
     -184.32, -186.62, -188.93, -191.23, -193.54, -195.84, -198.14, -200.45},
    {-221.18, -223.49, -225.79, -228.1, -230.4, -232.7, -235.01, -237.31,
     -239.62, -241.92, -244.22, -246.53, -248.83, -251.14, -253.44, -255.74,
     -276.48, -278.78, -281.09, -283.39, -285.7, -288, -290.3, -292.61, -294.91,
     -297.22, -299.52, -301.82, -304.13, -306.43, -308.74, -311.04},
    {-331.78, -334.08, -336.38, -338.69, -340.99, -343.3, -345.6, -347.9,
     -350.21, -352.51, -354.82, -357.12, -359.42, -361.73, -364.03, -366.34,
     -387.07, -389.38, -391.68, -393.98, -396.29, -398.59, -400.9, -403.2,
     -405.5, -407.81, -410.11, -412.42, -414.72, -417.02, -419.33, -421.63},
    {-442.37, -444.67, -446.98, -449.28, -451.58, -453.89, -456.19, -458.5,
     -460.8, -463.1, -465.41, -467.71, -470.02, -472.32, -474.62, -476.93,
     -497.66, -499.97, -502.27, -504.58, -506.88, -509.18, -511.49, -513.79,
     -516.1, -518.4, -520.7, -523.01, -525.31, -527.62, -529.92, -532.22},
    {-552.96, -555.26, -557.57, -559.87, -562.18, -564.48, -566.78, -569.09,
     -571.39, -573.7, -576, -578.3, -580.61, -582.91, -585.22, -587.52, -608.26,
     -610.56, -612.86, -615.17, -617.47, -619.78, -622.08, -624.38, -626.69,
     -628.99, -631.3, -633.6, -635.9, -638.21, -640.51, -642.82},
    {-663.55, -665.86, -668.16, -670.46, -672.77, -675.07, -677.38, -679.68,
     -681.98, -684.29, -686.59, -688.9, -691.2, -693.5, -695.81, -698.11,
     -718.85, -721.15, -723.46, -725.76, -728.06, -730.37, -732.67, -734.98,
     -737.28, -739.58, -741.89, -744.19, -746.5, -748.8, -751.1, -753.41},
    {-774.14, -776.45, -778.75, -781.06, -783.36, -785.66, -787.97, -790.27,
     -792.58, -794.88, -797.18, -799.49, -801.79, -804.1, -806.4, -808.7,
     -829.44, -831.74, -834.05, -836.35, -838.66, -840.96, -843.26, -845.57,
     -847.87, -850.18, -852.48, -854.78, -857.09, -859.39, -861.7, -864},
    {-884.74, -887.04, -889.34, -891.65, -893.95, -896.26, -898.56, -900.86,
     -903.17, -905.47, -907.78, -910.08, -912.38, -914.69, -916.99, -919.3,
     -940.03, -942.34, -944.64, -946.94, -949.25, -951.55, -953.86, -956.16,
     -958.46, -960.77, -963.07, -965.38, -967.68, -969.98, -972.29, -974.59},
    {-995.33, -997.63, -999.94, -1002.24, -1004.54, -1006.85, -1009.15,
     -1011.46, -1013.76, -1016.06, -1018.37, -1020.67, -1022.98, -1025.28,
     -1027.58, -1029.89, -1050.62, -1052.93, -1055.23, -1057.54, -1059.84,
     -1062.14, -1064.45, -1066.75, -1069.06, -1071.36, -1073.66, -1075.97,
     -1078.27, -1080.58, -1082.88, -1085.18},
    {-1105.92, -1108.22, -1110.53, -1112.83, -1115.14, -1117.44, -1119.74,
     -1122.05, -1124.35, -1126.66, -1128.96, -1131.26, -1133.57, -1135.87,
     -1138.18, -1140.48, -1161.22, -1163.52, -1165.82, -1168.13, -1170.43,
     -1172.74, -1175.04, -1177.34, -1179.65, -1181.95, -1184.26, -1186.56,
     -1188.86, -1191.17, -1193.47, -1195.78},
    {-1216.51, -1218.82, -1221.12, -1223.42, -1225.73, -1228.03, -1230.34,
     -1232.64, -1234.94, -1237.25, -1239.55, -1241.86, -1244.16, -1246.46,
     -1248.77, -1251.07, -1271.81, -1274.11, -1276.42, -1278.72, -1281.02,
     -1283.33, -1285.63, -1287.94, -1290.24, -1292.54, -1294.85, -1297.15,
     -1299.46, -1301.76, -1304.06, -1306.37}};
*/

//beike
/*
//beike v6k-16
const float INNER_TIME_16[12][32] = {
    {-0.0f,   -13.32f,   -3.33f,  -16.65f,  -6.66f,  -19.98f, -9.99f, -23.31f,
     -26.64f, -39.96f, -29.97f, -43.29f, -33.3f, -46.62f, -36.63f, -49.95f,
     -53.28f,  -66.6f,  -56.61f, -69.93f, -59.94f, -73.26f, -63.27f, -76.59f,
     -79.92f, -93.24f, -83.25f, -96.57f, -86.58f, -99.9f, -89.91f, -103.23f},
     {-106.56f, -119.88f, -109.89f, -123.21f, -113.22f, -126.54f, -116.55f, -129.87f,
      -133.2f, -146.52f, -136.53f, -149.85f, -139.86f, -153.18f, -143.19f, -156.51f,
      -159.84f,-173.16f,-163.17f,-176.49f,-166.5f,-179.82f,-169.83f,-183.15f,
      -186.48f,-199.8f,-189.81f,-203.13f,-193.14f,-206.46f,-196.47f,-209.79f},
    {-213.12f,-226.44f,-216.45f,-229.77f,-219.78f,-233.1f,-223.11f,-236.43f,
     -239.76f,-253.08f,-243.09f,-256.41f,-246.42f,-259.74f,-249.75f,-263.07f,
     -266.4f,-279.72f,-269.73f,-283.05f,-273.06f,-286.38f,-276.39f,-289.71f,
     -293.04f,-306.36f,-296.37f,-309.69f,-299.7f,-313.02f,-303.03f,-316.35f},
    {-319.68f,-333.0f,-323.01f,-336.33f,-326.34f,-339.66f,-329.67f,-342.99f,
     -346.32f,-359.64f,-349.65f,-362.97f,-352.98f,-366.3f,-356.31f,-369.63f,
     -372.96f,-386.28f,-376.29f,-389.61f,-379.62f,-392.94f,-382.95f,-396.27f,
     -399.6f,-412.92f,-402.93f,-416.25f,-406.26f,-419.58f,-409.59f,-422.91f},
    {-426.24f,-439.56f,-429.57f,-442.89f,-432.9f,-446.22f,-436.23f,-449.55f,
     -452.88f,-466.2f,-456.21f,-469.53f,-459.54f,-472.86f,-462.87f,-476.19f,
     -479.52f,-492.84f,-482.85f,-496.17f,-486.18f,-499.5f,-489.51f,-502.83f,
     -506.16f,-519.48f,-509.49f,-522.81f,-512.82f,-526.14f,-516.15f,-529.47f}, 
    {-532.8f,-546.12f,-536.13f,-549.45f,-539.46f,-552.78f,-542.79f,-556.11f,
     -559.44f,-572.76f,-562.77f,-576.09f,-566.1f,-579.42f,-569.43f,-582.75f,
     -586.08f,-599.4f,-589.41f,-602.73f,-592.74f,-606.06f,-596.07f,-609.39f,
     -612.72f,-626.04f,-616.05f,-629.37f,-619.38f,-632.7f,-622.71f,-636.03f},
    {-639.36f,-652.68f,-642.69f,-656.01f,-646.02f,-659.34f,-649.35f,-662.67f,
     -666.0f,-679.32f,-669.33f,-682.65f,-672.66f,-685.98f,-675.99f,-689.31f,
     -692.64f,-705.96f,-695.97f,-709.29f,-699.3f,-712.62f,-702.63f,-715.95f,
     -719.28f,-732.6f,-722.61f,-735.93f,-725.94f,-739.26f,-729.27f,-742.59f},
    {-745.92f,-759.24f,-749.25f,-762.57f,-752.58f,-765.9f,-755.91f,-769.23f,
     -772.56f,-785.88f,-775.89f,-789.21f,-779.22f,-792.54f,-782.55f,-795.87f,
     -799.2f,-812.52f,-802.53f,-815.85f,-805.86f,-819.18f,-809.19f,-822.51f,
     -825.84f,-839.16f,-829.17f,-842.49f,-832.5f,-845.82f,-835.83f,-849.15f},
    {-852.48f,-865.8f,-855.81f,-869.13f,-859.14f,-872.46f,-862.47f,-875.79f,
     -879.12f,-892.44f,-882.45f,-895.77f,-885.78f,-899.1f,-889.11f,-902.43f,
     -905.76f,-919.08f,-909.09f,-922.41f,-912.42f,-925.74f,-915.75f,-929.07f,
     -932.4f,-945.72f,-935.73f,-949.05f,-939.06f,-952.38f,-942.39f,-955.71f,},
    {-959.04f,-972.36f,-962.37f,-975.69f,-965.7f,-979.02f,-969.03f,-982.35f, 
    -985.68f,-999.0f,-989.01f,-1002.33f,-992.34f,-1005.66f,-995.67f,-1008.99f,
    -1012.32f,-1025.64f,-1015.65f,-1028.97f,-1018.98f,-1032.3f,-1022.31f,-1035.63f,
    -1038.96f,-1052.28f,-1042.29f,-1055.61f,-1045.62f,-1058.94f,-1048.95f,-1062.27f,},
    {-1065.6f,-1078.92f,-1068.93f,-1082.25f,-1072.26f,-1085.58f,-1075.59f,-1088.91f,
     -1092.24f,-1105.56f,-1095.57f,-1108.89f,-1098.9f,-1112.22f,-1102.23f,-1115.55f,
     -1118.88f,-1132.2f,-1122.21f,-1135.53f,-1125.54f,-1138.86f,-1128.87f,-1142.19f,
     -1145.52f,-1158.84f,-1148.85f,-1162.17f,-1152.18f,-1165.5f,-1155.51f,-1168.83f},
    {-1172.16f,-1185.48f,-1175.49f,-1188.81f,-1178.82f,-1192.14f,-1182.15f,-1195.47f,
     -1198.8f,-1212.12f,-1202.13f,-1215.45f,-1205.46f,-1218.78f,-1208.79f,-1222.11f,
     -1225.44f,-1238.76f,-1228.77f,-1242.09f,-1232.1f,-1245.42f,-1235.43f,-1248.75f,
     -1252.08f,-1265.4f,-1255.41f,-1268.73f,-1258.74f,-1272.06f,-1262.07f,-1275.39f}};     
*/

//v6C 0x3757 beike
const float INNER_TIME_16[12][32] = {
    {-0.0f,-12.5f,-3.125f,-15.625f,-6.25f,-18.75f,-9.375f,-21.875f,
     -25.0f,-37.5f,-28.125f,-40.625f,-31.25f,-43.75f,-34.375f,-46.875f,
     -50.000f, -62.500f, -53.125f, -65.625f, -56.250f, -68.750f, -59.375f, -71.875f, 
     -75.000f, -87.500f, -78.125f, -90.625f, -81.250f, -93.750f, -84.375f, -96.875f},
    {-100.000f, -112.500f, -103.125f,-115.625f, -106.250f,-118.750f, -109.375f, -121.875f, 
     -125.000f, -137.500f, -128.125f, -140.625f, -131.250f, -143.750f, -134.375f, -146.875f, 
     -150.000f, -162.500f, -153.125f,-165.625f,-156.250f, -168.750f, -159.375f, -171.875f, 
     -175.000f,-187.500f, -178.125f,-190.625f,-181.250f,-193.750f, -184.375f,-196.875f},
    {-200.000f, -212.500f, -203.125f, -215.625f, -206.250f, -218.750f, -209.375f, -221.875f, 
     -225.000f, -237.500f, -228.125f, -240.625f, -231.250f, -243.750f, -234.375f, -246.875f, 
     -250.000f, -262.500f, -253.125f, -265.625f, -256.250f, -268.750f, -259.375f, -271.875f, 
     -275.000f, -287.500f, -278.125f, -290.625f, -281.250f, -293.750f, -284.375f, -296.875f},
    {-300.000f, -312.500f, -303.125f, -315.625f, -306.250f, -318.750f, -309.375f, -321.875f, 
     -325.000f, -337.500f, -328.125f, -340.625f, -331.250f, -343.750f, -334.375f, -346.875f, 
     -350.000f, -362.500f, -353.125f, -365.625f, -356.250f, -368.750f, -359.375f, -371.875f, 
     -375.000f, -387.500f, -378.125f, -390.625f, -381.250f, -393.750f, -384.375f, -396.875f},
    {-400.000f, -412.500f, -403.125f, -415.625f, -406.250f, -418.750f, -409.375f, -421.875f, 
     -425.000f, -437.500f, -428.125f, -440.625f, -431.250f, -443.750f, -434.375f, -446.875f, 
     -450.000f, -462.500f, -453.125f, -465.625f, -456.250f, -468.750f, -459.375f, -471.875f,
     -475.000f, -487.500f, -478.125f, -490.625f, -481.250f, -493.750f, -484.375f, -496.875f},
    {-500.000f, -512.500f, -503.125f, -515.625f, -506.250f, -518.750f, -509.375f, -521.875f, 
     -525.000f, -537.500f, -528.125f, -540.625f, -531.250f, -543.750f, -534.375f, -546.875f, 
     -550.000f, -562.500f, -553.125f, -565.625f, -556.250f, -568.750f, -559.375f, -571.875f, 
     -575.000f, -587.500f, -578.125f, -590.625f, -581.250f, -593.750f, -584.375f, -596.875f},
    {-600.000f, -612.500f, -603.125f, -615.625f, -606.250f, -618.750f, -609.375f, -621.875f, 
     -625.000f, -637.500f, -628.125f, -640.625f, -631.250f, -643.750f, -634.375f, -646.875f, 
     -650.000f, -662.500f, -653.125f, -665.625f, -656.250f, -668.750f, -659.375f, -671.875f, 
     -675.000f, -687.500f, -678.125f, -690.625f, -681.250f, -693.750f, -684.375f, -696.875f},
    {-700.000f, -712.500f, -703.125f, -715.625f, -706.250f, -718.750f, -709.375f, -721.875f,
     -725.000f, -737.500f, -728.125f, -740.625f, -731.250f,-743.750f, -734.375f, -746.875f, 
     -750.000f, -762.500f, -753.125f, -765.625f, -756.250f, -768.750f, -759.375f, -771.875f, 
     -775.000f, -787.500f, -778.125f, -790.625f, -781.250f, -793.750f, -784.375f, -796.875f},
    {-800.000f, -812.500f, -803.125f, -815.625f, -806.250f, -818.750f, -809.375f, -821.875f, 
     -825.000f, -837.500f, -828.125f, -840.625f, -831.250f, -843.750f, -834.375f, -846.875f,
     -850.000f, -862.500f, -853.125f, -865.625f, -856.250f, -868.750f, -859.375f, -871.875f, 
     -875.000f, -887.500f, -878.125f, -890.625f, -881.250f, -893.750f, -884.375f, -896.875f},
    {-900.000f, -912.500f, -903.125f, -915.625f, -906.250f, -918.750f, -909.375f, -921.875f, 
     -925.000f, -937.500f, -928.125f, -940.625f, -931.250f, -943.750f, -934.375f, -946.875f,
     -950.000f, -962.500f, -953.125f, -965.625f, -956.250f, -968.750f, -959.375f, -971.875f, 
     -975.000f, -987.500f, -978.125f, -990.625f, -981.250f, -993.750f, -984.375f, -996.875f},
    {-1000.000f, -1012.500f, -1003.125f, -1015.625f, -1006.250f, -1018.750f, -1009.375f, -1021.875f, 
     -1025.000f, -1037.500f, -1028.125f, -1040.625f, -1031.250f, -1043.750f, -1034.375f, -1046.875f,
     -1050.000f, -1062.500f, -1053.125f, -1065.625f, -1056.250f, -1068.750f, -1059.375f, -1071.875f, 
     -1075.000f, -1087.500f, -1078.125f, -1090.625f, -1081.250f, -1093.750f, -1084.375f, -1096.875f},
    {-1100.000f, -1112.500f, -1103.125f, -1115.625f, -1106.250f, -1118.750f, -1109.375f, -1121.875f, 
     -1125.000f, -1137.500f, -1128.125f, -1140.625f, -1131.250f, -1143.750f, -1134.375f, -1146.875f, 
     -1150.000f, -1162.500f, -1153.125f, -1165.625f, -1156.250f, -1168.750f, -1159.375f, -1171.875f, 
     -1175.000f, -1187.500f, -1178.125f, -1190.625f, -1181.250f, -1193.750f, -1184.375f, -1196.875f}}; 
//beike end

const int N_LASERS = 64;

/// ring sequence for device laser numbers
const int LASER_SEQUENCE[N_LASERS] = {
    6,  7,  10, 11, 0,  1,  4,  5,  8,  9,  14, 15, 18, 19, 22, 23,
    12, 13, 16, 17, 20, 21, 26, 27, 30, 31, 2,  3,  24, 25, 28, 29,
    38, 39, 42, 43, 32, 33, 36, 37, 40, 41, 46, 47, 50, 51, 54, 55,
    44, 45, 48, 49, 52, 53, 58, 59, 62, 63, 34, 35, 56, 57, 60, 61};

/// convert laser number to ring sequence (inverse of LASER_SEQUENCE)
const int LASER_RING[N_LASERS] = {
    4,  5,  26, 27, 6,  7,  0,  1,  8,  9,  2,  3,  16, 17, 10, 11,
    18, 19, 12, 13, 20, 21, 14, 15, 28, 29, 22, 23, 30, 31, 24, 25,
    36, 37, 58, 59, 38, 39, 32, 33, 40, 41, 34, 35, 48, 49, 42, 43,
    50, 51, 44, 45, 52, 53, 46, 47, 60, 61, 54, 55, 62, 63, 56, 57};
}
}
}

#endif  // CYBERTRON_ONBOARD_DRIVERS_VELODYNE_INCLUDE_VELODYNE_LIB_CONST_VARIABLES_H
