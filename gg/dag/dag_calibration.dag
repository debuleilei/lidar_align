# Define all coms in DAG streaming.
module_config {
    module_library : "lib/libeight_test.so"
    components {
        comname : "comback_eight"
        comclass : "Compeight_back"
        confpath : "conf/velodyne16_left.conf"        
        receiver : {
          inchannelnames : ["/sensor/velodyne16/back/PointCloud2",
           "/sensor/novatel/inspva"]
          inqosfilter : "SimpleFilter"
          datafusionoption : {
              queue_size : 1
              window_time_ms : 10
          }
        }

        sender : {
            outchannelnames : ["/sensor/velodyne16/back_trans/PointCloud2"]
        }
    }
    channels {
        channelname : "/sensor/velodyne16/back_trans/PointCloud2"
        msgtype : "adu.common.sensor.PointCloud"
    }
    
    components {
        comname : "comleft_eight"
        comclass : "Compeight_left"
        confpath : "conf/velodyne16_left.conf"        
        receiver : {
          inchannelnames : ["/sensor/velodyne16/left/PointCloud2",
           "/sensor/novatel/inspva"]
          inqosfilter : "SimpleFilter"
          datafusionoption : {
              queue_size : 1
              window_time_ms : 10
          }
        }

        sender : {
            outchannelnames : ["/sensor/velodyne16/left_trans/PointCloud2"]
        }
    }
    channels {
        channelname : "/sensor/velodyne16/left_trans/PointCloud2"
        msgtype : "adu.common.sensor.PointCloud"
    }
    components {
        comname : "comright_eight"
        comclass : "Compeight_right"
        confpath : "conf/velodyne16_left.conf"        
        receiver : {
          inchannelnames : ["/sensor/velodyne16/right/PointCloud2",
           "/sensor/novatel/inspva"]
          inqosfilter : "SimpleFilter"
          datafusionoption : {
              queue_size : 1
              window_time_ms : 10
          }
        }

        sender : {
            outchannelnames : ["/sensor/velodyne16/right_trans/PointCloud2"]
        }
    }
    channels {
        channelname : "/sensor/velodyne16/right_trans/PointCloud2"
        msgtype : "adu.common.sensor.PointCloud"
    }

    components {
        comname : "comadd_eight"
        comclass : "Compvelodyne_add"
        confpath : "conf/velodyne16_left.conf"        
        receiver : {
          inchannelnames : ["/sensor/velodyne16/left_trans/PointCloud2",
           "/sensor/velodyne16/right_trans/PointCloud2",
           "/sensor/velodyne16/back_trans/PointCloud2"]
          inqosfilter : "SimpleFilter"
          datafusionoption : {
              queue_size : 1
              window_time_ms : 10
          }
        }

        sender : {
            outchannelnames : ["/sensor/velodyne16/add_eight/PointCloud2"]
        }
    }
    channels {
        channelname : "/sensor/velodyne16/add_eight/PointCloud2"
        msgtype : "adu.common.sensor.PointCloud"
    }
    
    
}

